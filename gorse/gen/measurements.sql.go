// Code generated by sqlc. DO NOT EDIT.
// source: measurements.sql

package gorse

import (
	"context"
	"fmt"
)

const listMeasurements = `-- name: ListMeasurements :many
select name, time_stamp, value, comment from measurements where ` + "`" + `value` + "`" + ` in (?)
`

func (q *Queries) ListMeasurements(ctx context.Context, value []float64) ([]Measurement, error) {

	if len(value) <= 0 {
		return nil, fmt.Errorf("value length is invalid")
	}
	param := "?"
	for i := 0; i < len(value)-1; i++ {
		param += ",?"
	}
	listMeasurements := replaceNth(listMeasurements, "(?)", "( "+param+" )", 1)

	rows, err := q.db.QueryContext(ctx, listMeasurements, float64Slice2interface(value)...)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Measurement
	for rows.Next() {
		var i Measurement
		if err := rows.Scan(
			&i.Name,
			&i.TimeStamp,
			&i.Value,
			&i.Comment,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
