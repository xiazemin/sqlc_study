// Code generated by sqlc. DO NOT EDIT.
// source: company.sql

package gen

import (
	"context"
)

const listCompanyById = `-- name: ListCompanyById :many
select id, name from company where id in (?)
`

func (q *Queries) ListCompanyById(ctx context.Context, id []int32) ([]Company, error) {

	param := "?"
	for i := 0; i < len(id)-1; i++ {
		param += ",?"
	}
	listCompanyById := replaceNth(listCompanyById, "(?)", "("+param+")", 1)

	rows, err := q.db.QueryContext(ctx, listCompanyById, int32Slice2interface(id)...)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Company
	for rows.Next() {
		var i Company
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
